# =============================================================================
# TMS Client - Production Dockerfile
# =============================================================================
# Multi-stage build for optimized production image

# =============================================================================
# Stage 1: Build the React app
# =============================================================================
FROM node:18-alpine AS builder

# Set working directory
WORKDIR /app

# Install dependencies first for better caching
COPY package*.json ./
RUN npm ci --only=production --silent

# Copy source code
COPY . .

# Build arguments for environment configuration
ARG NODE_ENV=production
ARG REACT_APP_API_URL
ARG REACT_APP_SENTRY_DSN
ARG REACT_APP_VERSION

# Set environment variables
ENV NODE_ENV=$NODE_ENV
ENV REACT_APP_API_URL=$REACT_APP_API_URL
ENV REACT_APP_SENTRY_DSN=$REACT_APP_SENTRY_DSN
ENV REACT_APP_VERSION=$REACT_APP_VERSION
ENV GENERATE_SOURCEMAP=false

# Build the app
RUN npm run build

# =============================================================================
# Stage 2: Production Nginx server
# =============================================================================
FROM nginx:1.25-alpine AS production

# Install curl for health checks
RUN apk add --no-cache curl

# Remove default nginx website
RUN rm -rf /usr/share/nginx/html/*

# Copy built app from builder stage
COPY --from=builder /app/build /usr/share/nginx/html

# Copy nginx configuration
COPY nginx.prod.conf /etc/nginx/nginx.conf

# Create nginx user and set permissions
RUN addgroup -g 101 -S nginx-group && \
    adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx-group -g nginx nginx-user && \
    chown -R nginx-user:nginx-group /usr/share/nginx/html && \
    chmod -R 755 /usr/share/nginx/html

# Create directories for nginx
RUN mkdir -p /var/cache/nginx && \
    chown -R nginx-user:nginx-group /var/cache/nginx && \
    mkdir -p /var/log/nginx && \
    chown -R nginx-user:nginx-group /var/log/nginx

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost/health || exit 1

# Expose port
EXPOSE 80 443

# Use non-root user
USER nginx-user

# Start nginx
CMD ["nginx", "-g", "daemon off;"] 