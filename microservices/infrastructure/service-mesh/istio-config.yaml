apiVersion: install.istio.io/v1alpha1
kind: IstioOperator
metadata:
  name: tms-istio-control-plane
  namespace: istio-system
spec:
  values:
    global:
      meshID: tms-mesh
      multiCluster:
        clusterName: tms-cluster
      network: tms-network
  components:
    pilot:
      k8s:
        env:
          - name: PILOT_TRACE_SAMPLING
            value: "100"
          - name: PILOT_ENABLE_WORKLOAD_ENTRY_AUTOREGISTRATION
            value: true
    ingressGateways:
      - name: istio-ingressgateway
        enabled: true
        k8s:
          service:
            type: LoadBalancer
            ports:
              - port: 15021
                targetPort: 15021
                name: status-port
              - port: 80
                targetPort: 8080
                name: http2
              - port: 443
                targetPort: 8443
                name: https
              - port: 31400
                targetPort: 31400
                name: tcp
              - port: 15443
                targetPort: 15443
                name: tls
    egressGateways:
      - name: istio-egressgateway
        enabled: true
        k8s:
          service:
            type: ClusterIP
            ports:
              - port: 80
                name: http2
              - port: 443
                name: https
              - port: 15443
                name: tls

---
apiVersion: networking.istio.io/v1beta1
kind: Gateway
metadata:
  name: tms-gateway
  namespace: tms-system
spec:
  selector:
    istio: ingressgateway
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "tms.example.com"
    - "api.tms.example.com"
    - "graphql.tms.example.com"
    tls:
      httpsRedirect: true
  - port:
      number: 443
      name: https
      protocol: HTTPS
    tls:
      mode: SIMPLE
      credentialName: tms-tls-secret
    hosts:
    - "tms.example.com"
    - "api.tms.example.com"
    - "graphql.tms.example.com"

---
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: tms-virtualservice
  namespace: tms-system
spec:
  hosts:
  - "api.tms.example.com"
  gateways:
  - tms-gateway
  http:
  - match:
    - uri:
        prefix: "/graphql"
    route:
    - destination:
        host: graphql-service
        port:
          number: 8007
    timeout: 30s
    retries:
      attempts: 3
      perTryTimeout: 10s
  - match:
    - uri:
        prefix: "/auth"
    route:
    - destination:
        host: auth-service
        port:
          number: 8001
    timeout: 15s
  - match:
    - uri:
        prefix: "/users"
    route:
    - destination:
        host: user-service
        port:
          number: 8002
    timeout: 15s
  - match:
    - uri:
        prefix: "/quiz"
    route:
    - destination:
        host: quiz-service
        port:
          number: 8003
    timeout: 30s
  - match:
    - uri:
        prefix: "/sikkerhetskontroll"
    route:
    - destination:
        host: sikkerhetskontroll-service
        port:
          number: 8004
    timeout: 45s
  - match:
    - uri:
        prefix: "/hr"
    route:
    - destination:
        host: hr-service
        port:
          number: 8005
    timeout: 15s
  - match:
    - uri:
        prefix: "/economy"
    route:
    - destination:
        host: economy-service
        port:
          number: 8006
    timeout: 20s
  - match:
    - uri:
        prefix: "/notifications"
    route:
    - destination:
        host: notification-service
        port:
          number: 8008
    timeout: 10s
  - match:
    - uri:
        prefix: "/ml"
    route:
    - destination:
        host: ml-service
        port:
          number: 8009
    timeout: 60s
  - route:
    - destination:
        host: api-gateway
        port:
          number: 8000

---
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: tms-destination-rules
  namespace: tms-system
spec:
  host: "*.tms-system.svc.cluster.local"
  trafficPolicy:
    tls:
      mode: ISTIO_MUTUAL
    connectionPool:
      tcp:
        maxConnections: 100
      http:
        http1MaxPendingRequests: 50
        http2MaxRequests: 100
        maxRequestsPerConnection: 10
        maxRetries: 3
        consecutiveGatewayErrors: 5
        interval: 30s
        baseEjectionTime: 30s
        maxEjectionPercent: 50
    circuitBreaker:
      consecutiveGatewayErrors: 5
      interval: 30s
      baseEjectionTime: 30s
      maxEjectionPercent: 50
      minHealthPercent: 50

---
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: api-gateway-destination
  namespace: tms-system
spec:
  host: api-gateway
  trafficPolicy:
    loadBalancer:
      simple: LEAST_CONN
    connectionPool:
      tcp:
        maxConnections: 200
      http:
        http1MaxPendingRequests: 100
        http2MaxRequests: 200
        maxRequestsPerConnection: 20
    circuitBreaker:
      consecutiveGatewayErrors: 3
      interval: 30s
      baseEjectionTime: 30s
      maxEjectionPercent: 30

---
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: ml-service-destination
  namespace: tms-system
spec:
  host: ml-service
  trafficPolicy:
    loadBalancer:
      simple: ROUND_ROBIN
    connectionPool:
      tcp:
        maxConnections: 50
      http:
        http1MaxPendingRequests: 25
        http2MaxRequests: 50
        maxRequestsPerConnection: 5
        h2UpgradePolicy: UPGRADE
    circuitBreaker:
      consecutiveGatewayErrors: 2
      interval: 60s
      baseEjectionTime: 60s
      maxEjectionPercent: 25

---
apiVersion: security.istio.io/v1beta1
kind: PeerAuthentication
metadata:
  name: tms-peer-authentication
  namespace: tms-system
spec:
  mtls:
    mode: STRICT

---
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: tms-authorization-policy
  namespace: tms-system
spec:
  rules:
  - from:
    - source:
        principals: ["cluster.local/ns/tms-system/sa/api-gateway"]
    to:
    - operation:
        methods: ["GET", "POST", "PUT", "DELETE"]
  - from:
    - source:
        principals: ["cluster.local/ns/istio-system/sa/istio-ingressgateway-service-account"]
    to:
    - operation:
        methods: ["GET", "POST", "PUT", "DELETE"]
        paths: ["/health", "/metrics"]

---
apiVersion: telemetry.istio.io/v1alpha1
kind: Telemetry
metadata:
  name: tms-telemetry
  namespace: tms-system
spec:
  metrics:
  - providers:
    - name: prometheus
  - overrides:
    - match:
        metric: ALL_METRICS
      tagOverrides:
        request_protocol:
          value: "http"
        response_code:
          operation: UPSERT
          value: "%{RESPONSE_CODE}"
        source_service:
          value: "%{SOURCE_SERVICE}"
        destination_service:
          value: "%{DESTINATION_SERVICE}"
  tracing:
  - providers:
    - name: jaeger
  accessLogging:
  - providers:
    - name: otel 